[ 언어 ]
    - 영어 학원 , 사람( 영어학습 )
        - 한국인(한국어)        ---- 번역(컴파일/인터프리터) ----  미국인(영어)
        - 영어문법(문자) /암기 - 규칙 
        - 한국어문법( 문자 ) /암기 - 규칙

    - 컴퓨터 학원 , 사람( 컴퓨터 언어 ) 
        - 사람(HTML/CSS/JS언어) ---- 번역(컴파일/인터프리터) ---- 컴퓨터(기계어)
        - HTML/CSS/JS문법/암기 - 규칙 

[ 웹 프로그래밍 언어]
    - HTML : 하이퍼텍스트 마크업 언어      = 뼈대
    - CSS : 캐스케이드 스타일 시트 언어    = 옷     -->  HTML 없이 독단적으로 실행 불가능 
    - JS : 자바 스크립트 언어             = 행동    --> HTML 없이 독단적으로 실행 불가능 
        HTML( CSS포함 , JS 포함 )

[ JS ]
    - 2009년 이후 node.js 나오면서 백엔드 역할 가능해졌다. 인기 상승
    1. 웹 프로그래밍( HTML,CSS,JS )
    2. 웹 서버( node.js )
    3. 앱 ( REACT.JS NATIVE )
    4. 소프트웨어 ( NW.JS )
        ---> 스타트업 ( 소규모 프로젝트 )

[ JS 적용하는 방법 ]
    1. <body> 마크업 안에서 <script> 마크업 사용
        <script>
            JS코드 작성 
        </script>
    
    2. * JS파일 생성하여 HTML 에서 임포트(불러오기) 사용
        <head> 마크업 안에서 <script src="JS파일경로" >
        <script src="파일경로"></script>

[ JS 주석 ]
    1. /* 여러줄 주석 */
    2. // 한줄 주석 

[ 리터럴 ]
  - 키보드로부터 직접 입력한 값 그 자체

[ 변 수 ]
  - 하나의 자료/데이터를 저장하는 메모리 공간
  1. 변수 만들기
      1.let
      2.변수명
      3.=
      4.리터럴/값
      5.let 변수명 = 리터럴
  
  2.변수의 호출
      변수명
  
  3. 변수의 값 호출
      변수명 = 새로운 값

  4. 변수의 연산
      let 변수명A = 변수명B + 10 

  5. 변수의 초기화, 변수가 생성될 때 처음에 대입되는 행위 및 작업
      1.let 변수명 = 리터럴;
      2.let 변수명 ;       <---------- underfined(값이 없다) 

[ 배 열 ]
  1. 순서대로 번호가 붙인 원소 들이 연속적인 형태로 구성된 데이터 타입
  2. 인덱스란? 순서대로 배정된 번호 , 0번부터 시작 , 길이/총개수 : 3개 이면 인덱스는 0 1 2(n-1)
  3. 배열 선언 :  [ 대괄호 ] / ,(쉼표)를 이용한 값을 구분하여 열거한다.
      let 변수명 = [ 값1 , 값2 , 값3 ]
  4. 배열전체 호출 : 배열변수명
  5. 배열내 특정한 위치의 요소(값) 호출 : 배열변수명[인덱스]
  6. 배열수정
      1.전체 수정 : 배열변수명 = [새로운배열]
  7. 배열내 요소 추가 : 
      .push( 새로운 값 )
      .splice( 중간 삽입 할 인덱스 , 0 ,  새로운 값 )
  8. 배열내 요소 삭제 : 
      .splice( 삭제 할 인덱스 , 삭제 개 수 )
  9. 배열내 요소 찾기 :
      .indexOf( 찾을 데이터 ) , 배열내 찾을데이터가 존재하면 인덱스반환 없으면 -1반환
 
 [ 문 자 열 ]
  1. " " vs ' ' vs ` ` 으로 감싼 자료의 타입
  2. 이스케이프/제어 문자
      1. \n줄바꿈 ,  2. \t들여쓰기 , 3. \"큰따움표출력 , 4. \'작은따옴표출력 5. \\빽슬래시출력
  3. `빽틱 템플릿 : 문자열 사이에 변수호출과 연산을 연결하는 문자열 구조, 선언부 제외(변수선언 불가 및 변수호출 가능)
      `문자열A${ 변수호출 } ${ 연산 } ${ 함수호출 } 문자열B`


[ 연 산 자 ]
  1. 산술연산자 : +더하기 -빼기 *곱하기 /나누기 %나머지
  2. 연결연산자 : +연결
  3. 비교연산자 :  >초과 <미만 >=이상 <=이하 ==(값만)같다 !=(값만)다르다 ===(값과타입)같다 !==(값과타입)다르다
  4. 관계연산자 : &&이면서 ||이면서 !부정
  5. (복합) 대입연산자 :  =대입 += -= *= %=
  6. 증감연산자 : 변수++ , ++변수 , 변수-- , --변수
  7. 삼항연산자 : 조건문 ? 참 : 거짓

  [ 함 수 ] 무엇을 더하고 무엇을 뺄지 , 
     - 함(상자) 수(숫자) : 상자 안에 들어있는 수 -> 미리 상자에 넣어둔 수 -> 미리 상자에 넣어둔 코드들
     -> 코드/수 를 미리 넣어두고 다시 쓸려고 ,  변수는 데이터 저장 / 함수는 코드 저장
     - JS회사에서 미리 만들어 놓은 코드들을 일반 개발자들에게 편리하게 기능을 제공하는 미리 만든 키워드들

  [ 입출력 관련 함 수 ]
     1. console.log( )        : 정의:크롬 > F12(사용자설정)>[console]탭 출력 하는 함수 / 매개변수 : 출력할 데이터 출력할 데이터 / 반환값 : X
     2. document.write( )     :정의:HTML body 마크업 출력하는 함수 / 매개변수 : 출력할 데이터 / 반환값 : X
     3. prompt( )             : 정의:HTML 알람창으로부터 입력받은 함수 / 매개변수 : 알람 메시지 / 반환값 : (Stirng)입력받은 데이터
    
  [ 타입 변환 함 수 ] 
     [ 타입 변환 함수 ]
     1. Number( )            : 정의: 숫자타입으로 변환 함수  / 매개변수 : 변환할 데이터 / 반환값 : 변환된 숫자데이터
     2. String( )            : 정의: 문자열타입으로 변환 함수 / 매개변수 : 변환할 데이터 / 반환값 : 변환된 문자열데이터
     3. parseInt( )          : 정의: 정수타입으로 변환 함수 / 매개변수 : 변환할 데이터 / 반환값 : 변환된 정수데이터

  [ 조 건 문 ]
      - 조건결과에 따른 흐름제어 , 컴퓨터가 논리(상황에 따른 판단력)적인 사고력이 넣어준다
      - 예] 내가 돈이 10,000원이 있으면 택시를 탄다. 아니면 걸어간다.
      - 예] if( ehs>10000 ){ 택시를 탄다; } else{ 걸어간다; }

       
      - 조건의 결과값 : true / false
      - 삼항연산자 : 간단한 조건문
        1. IF 조건문 : 조건문을 표현 가능한 문법
            - 조건에 TRUE/FALSE , 비교연산 또는 관계연산 
        2. IF 형태 
            1. if( 조건 ) 참일경우코드;
            2. if( 조건 ) { 참일경우코드; 참일경우코드; }
            3. if( 조건 ) { 참일경우코드; }
               else{ 거짓일경우코드; }
            4. if( 조건1 ){ 참1일경우코드; }
               else if( 조건2 ){ 참2일경우코드; }
               else if( 조건3 ){ 참3일경우코드; }
               else if( 조건4 ){ 참4일경우코드; }
               else{ 거짓일경우코드 }
            5. if중첩 
                if( 조건 ){ 
                    if( 조건 ){ }
                    else{ }
                } else{ }
    - 주의할점 : 1.  ) 와 { 사이에 ;(세미콜론)는 없이 작성 2. {시작중괄호 }끝중괄호 매칭 



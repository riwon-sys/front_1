//10, '유재석', true
/*
  js의 데이터 기본타입
     
     1.문자열(string) : "" 또는 ''또는 ``(백틱-키보드TAB)으로 감싼 자료를 문자열 자료라 함
         10 vs "10" : 자료는 10 같다. 자료의 타입은 다르다.
         [예] '안녕하세요',"유재석", '<div> </div>'
     
     2.숫자(number) : 
         [예] 10,7,3.14
    
     3.불리언(boolean)
         [예] true 또는 false

  js의 변수
     - 변수(변하는 수) vs 상수(고정된 수)
     1. 하나의 자료/데이터 를 저장할 수 있는 메모리 공간
     2. let 키워드, const 키워드 사용
     3. 메모리 공간, 상징적인 이름 = 변수명
 
 리터럴 :  데이터/자료 그 자체의 의미이자 뜻, 숫자 10정의? 알파벳 a 정의? 한글 ㄱ 정의?
     - 각 언어들이 미리 정의해두고 동일한 데이터/자료를 참조하고 사용하는 방법
     - 왜 ? 메모리(저장소) 효울성을 극대화 하기 위해서
     - [예]
         let 변수1=10
         let 변수2=10 ---> 변수1 과 변수 2는 같은 값 및 같은 자료를 참조한다. ---> 값 및 자료 1개 ---> 객체지향

*/ 

10           // 숫자 타입의 자료
"안녕하세요"  // 문자열 타입의 자료
true         // 불리언 타입의 자료

let 숫자상자 = 10 // 숫자 타입 의 자료를 '숫자상자' 변수의 저장
      // let 숫자상자 = 10 ---> 메모리(컴퓨터 기억하고있는 장치 또는 공간) 2개(10이라는 데이터가 저장된 메모리가 어딘가에 있음, 숫자상자(변수) 메모리)
let 숫자상자2 = 10     

let 문자열상자 =  "안녕하세요" // 문자열 타입 의 자료를 '문자열상자' 변수의 저장
let 불리언상자 = true; // 불리언 타입의 자료를 '불리언상자' 이라는 변수에 저장

// [1] 변수 선언하는 방법
     // 1. let : 변수 선언시 사용되는 키워드(미리 만들어진 의미있는 단어), 인기 검색 키워드
     // 2. 변수명 : 데이터 및 자료 를 저장하는 메모리의 상징적인 이름(* 식별; 같은 데이터를 참조하니까 구분하기 위한용도)
     //          - 중복하는 순간 식별이 깨지기 때문에 불가, 숫자로 시작 불가, 띄어쓰기 불가능.
     // 3. : 대입, 오른쪽 항의 값을 왼쪽 항의 값에 대입하는 연산자 키워드
     // 4. 리터럴 : 변수에 대입 할 리터럴/값 그 자체를 의미  

 let 변수상자1 = 10;

 // [2] 변수(냉장고) 사용 하는 이유 : 값 저장, 값 재사용, 그 자체 값의 의미 부여, 중간 계산 기억
 console.log(10);
 console.log(변수상자1);
 변수상자1= 20;
 변수상자1= 20 + 10; // - 객체지향 연관 / 함수 연관, 20+10 했을 때에 새로운 리터럴 30을 대입한다.

 // [3] 변수의 값 변경 하기
     // 1. 변경 할 변수명 = 새로운 값 : 변경 할 변수명 = 새로운 값
변수상자1 = "유재석";
console.log(변수상자1)

// [4] 변수의 연산
let 점수1 = 10
let 점수2 = 20
let 결과 = 점수1+점수2 // * html 및 css는 코드가 보이는게 다
     // 명령어 처리 순서
     // 1. let 결과 = 점수1+점수2
     // 1-1. =대입 기준으로 오른쪽 먼저 처리, 점수1 + 점수2
     // 2. '점수1'의 변수가 가진 값을 호출 및 반환, 10 + 점수2
     // 3. '점수2'의 변수가 가진 값을 호출 및 반환, 10 + 20
     // 4. 더하기 연산자, = 30
     // 5. 변수의 메모리 공간의 호출, let 결과 = 30
     // 6. 대입 연산자, 결과(30)
점수 2 = 100; // 점수2의 변수의 값 수정
console.log(결과); // 30 vs 110 어떤 값이 맞을까? 30

// [5] 변수의 값이 대입되지 않을 때
let 이름
console.log(이름) // 'undefined'타입, 변수 값을 초기(처음)화(대입) 없다 = 값이 없다.

// [6] 상수 만들기
     //1. const :  상수 만들기 위한 키워드
     //2. 상수명 :  
     //3. = 
     //4.리터럴
const 고정상자 = '안녕하세요'

// [7] 상수는 수정 불가능
고정상자 =10; // Assignment to constant variable.

